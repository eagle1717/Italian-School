{"remainingRequest":"C:\\Users\\tamer\\Desktop\\MAIN\\Main2\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\tamer\\Desktop\\MAIN\\Main2\\src\\store\\modules\\notifications.js","dependencies":[{"path":"C:\\Users\\tamer\\Desktop\\MAIN\\Main2\\src\\store\\modules\\notifications.js","mtime":1625895140353},{"path":"C:\\Users\\tamer\\Desktop\\MAIN\\Main2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\tamer\\Desktop\\MAIN\\Main2\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKdmFyIG5hbWVzcGFjZWQgPSB0cnVlOwp2YXIgc3RhdGUgPSB7CiAgbm90aWZpY2F0aW9uczogW10KfTsKdmFyIG11dGF0aW9ucyA9IHsKICBBRERfTk9USUZJQ0FUSU9OOiBmdW5jdGlvbiBBRERfTk9USUZJQ0FUSU9OKHN0YXRlLCBfcmVmKSB7CiAgICB2YXIgdHlwZSA9IF9yZWYudHlwZSwKICAgICAgICB0ZXh0ID0gX3JlZi50ZXh0LAogICAgICAgIGRlbGF5ID0gX3JlZi5kZWxheSwKICAgICAgICB1dWlkID0gX3JlZi51dWlkOwogICAgc3RhdGUubm90aWZpY2F0aW9ucy5wdXNoKHsKICAgICAgdHlwZTogdHlwZSwKICAgICAgdGV4dDogdGV4dCwKICAgICAgdXVpZDogdXVpZCB8fCBuZXcgRGF0ZSgpLmdldFRpbWUoKSwKICAgICAgZGVsYXk6IGRlbGF5IHx8IDUKICAgIH0pOwogIH0sCiAgUkVNT1ZFX05PVElGSUNBVElPTjogZnVuY3Rpb24gUkVNT1ZFX05PVElGSUNBVElPTihzdGF0ZSwgdXVpZCkgewogICAgc3RhdGUubm90aWZpY2F0aW9ucyA9IHN0YXRlLm5vdGlmaWNhdGlvbnMuZmlsdGVyKGZ1bmN0aW9uIChub3RpZmljYXRpb24pIHsKICAgICAgcmV0dXJuIG5vdGlmaWNhdGlvbi51dWlkICE9PSB1dWlkOwogICAgfSk7CiAgfQp9Owp2YXIgYWN0aW9ucyA9IHsKICBhZGRfbm90aWZpY2F0aW9uOiBmdW5jdGlvbiBhZGRfbm90aWZpY2F0aW9uKF9yZWYyLCBfcmVmMykgewogICAgdmFyIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgIHZhciB0eXBlID0gX3JlZjMudHlwZSwKICAgICAgICB0ZXh0ID0gX3JlZjMudGV4dCwKICAgICAgICBkZWxheSA9IF9yZWYzLmRlbGF5LAogICAgICAgIHV1aWQgPSBfcmVmMy51dWlkOwogICAgY29uc29sZS5sb2codHlwZSwgdGV4dCk7CiAgICBjb21taXQoIkFERF9OT1RJRklDQVRJT04iLCB7CiAgICAgIHR5cGU6IHR5cGUsCiAgICAgIHRleHQ6IHRleHQsCiAgICAgIGRlbGF5OiBkZWxheSwKICAgICAgdXVpZDogdXVpZAogICAgfSk7CiAgfSwKICByZW1vdmVfbm90aWZpY2F0aW9uOiBmdW5jdGlvbiByZW1vdmVfbm90aWZpY2F0aW9uKF9yZWY0LCB1dWlkKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjQuY29tbWl0OwogICAgY29tbWl0KCJSRU1PVkVfTk9USUZJQ0FUSU9OIiwgdXVpZCk7CiAgfQp9Owp2YXIgZ2V0dGVycyA9IHsKICBub3RpZmljYXRpb25BbGVydHM6IGZ1bmN0aW9uIG5vdGlmaWNhdGlvbkFsZXJ0cyhzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLm5vdGlmaWNhdGlvbnM7CiAgfQp9OwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZXNwYWNlZDogbmFtZXNwYWNlZCwKICBzdGF0ZTogc3RhdGUsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMsCiAgZ2V0dGVyczogZ2V0dGVycywKICBhY3Rpb25zOiBhY3Rpb25zCn07"},{"version":3,"sources":["C:/Users/tamer/Desktop/MAIN/Main2/src/store/modules/notifications.js"],"names":["namespaced","state","notifications","mutations","ADD_NOTIFICATION","type","text","delay","uuid","push","Date","getTime","REMOVE_NOTIFICATION","filter","notification","actions","add_notification","commit","console","log","remove_notification","getters","notificationAlerts"],"mappings":";AAAA,IAAMA,UAAU,GAAG,IAAnB;AACA,IAAMC,KAAK,GAAG;AACZC,EAAAA,aAAa,EAAE;AADH,CAAd;AAIA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,gBADgB,4BACCH,KADD,QACqC;AAAA,QAA3BI,IAA2B,QAA3BA,IAA2B;AAAA,QAArBC,IAAqB,QAArBA,IAAqB;AAAA,QAAfC,KAAe,QAAfA,KAAe;AAAA,QAARC,IAAQ,QAARA,IAAQ;AACnDP,IAAAA,KAAK,CAACC,aAAN,CAAoBO,IAApB,CAAyB;AACvBJ,MAAAA,IAAI,EAAJA,IADuB;AAEvBC,MAAAA,IAAI,EAAJA,IAFuB;AAGvBE,MAAAA,IAAI,EAAEA,IAAI,IAAI,IAAIE,IAAJ,GAAWC,OAAX,EAHS;AAIvBJ,MAAAA,KAAK,EAAEA,KAAK,IAAI;AAJO,KAAzB;AAMD,GARe;AAShBK,EAAAA,mBATgB,+BASIX,KATJ,EASWO,IATX,EASiB;AAC/BP,IAAAA,KAAK,CAACC,aAAN,GAAsBD,KAAK,CAACC,aAAN,CAAoBW,MAApB,CACpB,UAAAC,YAAY;AAAA,aAAIA,YAAY,CAACN,IAAb,KAAsBA,IAA1B;AAAA,KADQ,CAAtB;AAGD;AAbe,CAAlB;AAgBA,IAAMO,OAAO,GAAG;AACdC,EAAAA,gBADc,0CAC4C;AAAA,QAAvCC,MAAuC,SAAvCA,MAAuC;AAAA,QAA3BZ,IAA2B,SAA3BA,IAA2B;AAAA,QAArBC,IAAqB,SAArBA,IAAqB;AAAA,QAAfC,KAAe,SAAfA,KAAe;AAAA,QAARC,IAAQ,SAARA,IAAQ;AACxDU,IAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ,EAAkBC,IAAlB;AACAW,IAAAA,MAAM,CAAC,kBAAD,EAAqB;AAAEZ,MAAAA,IAAI,EAAJA,IAAF;AAAQC,MAAAA,IAAI,EAAJA,IAAR;AAAcC,MAAAA,KAAK,EAALA,KAAd;AAAqBC,MAAAA,IAAI,EAAJA;AAArB,KAArB,CAAN;AACD,GAJa;AAKdY,EAAAA,mBALc,sCAKkBZ,IALlB,EAKwB;AAAA,QAAhBS,MAAgB,SAAhBA,MAAgB;AACpCA,IAAAA,MAAM,CAAC,qBAAD,EAAwBT,IAAxB,CAAN;AACD;AAPa,CAAhB;AAUA,IAAMa,OAAO,GAAG;AACdC,EAAAA,kBAAkB,EAAE,4BAAArB,KAAK;AAAA,WAAIA,KAAK,CAACC,aAAV;AAAA;AADX,CAAhB;AAIA,eAAe;AACbF,EAAAA,UAAU,EAAVA,UADa;AAEbC,EAAAA,KAAK,EAALA,KAFa;AAGbE,EAAAA,SAAS,EAATA,SAHa;AAIbkB,EAAAA,OAAO,EAAPA,OAJa;AAKbN,EAAAA,OAAO,EAAPA;AALa,CAAf","sourcesContent":["const namespaced = true;\nconst state = {\n  notifications: []\n};\n\nconst mutations = {\n  ADD_NOTIFICATION(state, { type, text, delay, uuid }) {\n    state.notifications.push({\n      type,\n      text,\n      uuid: uuid || new Date().getTime(),\n      delay: delay || 5\n    });\n  },\n  REMOVE_NOTIFICATION(state, uuid) {\n    state.notifications = state.notifications.filter(\n      notification => notification.uuid !== uuid\n    );\n  }\n};\n\nconst actions = {\n  add_notification({ commit }, { type, text, delay, uuid }) {\n    console.log(type, text);\n    commit(\"ADD_NOTIFICATION\", { type, text, delay, uuid });\n  },\n  remove_notification({ commit }, uuid) {\n    commit(\"REMOVE_NOTIFICATION\", uuid);\n  }\n};\n\nconst getters = {\n  notificationAlerts: state => state.notifications\n};\n\nexport default {\n  namespaced,\n  state,\n  mutations,\n  getters,\n  actions\n};\n"]}]}